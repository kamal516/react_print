{"version":3,"names":["NativeModules","ThermalPrinterModule","defaultConfig","macAddress","ip","port","payload","autoCut","openCashbox","mmFeedPaper","printerDpi","printerWidthMM","printerNbrCharactersPerLine","timeout","getConfig","args","Object","assign","printTcp","printBluetooth","getBluetoothDeviceList"],"sources":["index.tsx"],"sourcesContent":["import { NativeModules } from 'react-native';\n\ntype BluetoothPrinter = {\n  deviceName: string;\n  macAddress: string;\n};\n\ntype NativeModuleType = typeof NativeModules & {\n  ThermalPrinterModule: {\n    printTcp(\n      ip: string,\n      port: number,\n      payload: string,\n      autoCut: boolean,\n      openCashbox: boolean,\n      mmFeedPaper: number,\n      printerDpi: number,\n      printerWidthMM: number,\n      printerNbrCharactersPerLine: number,\n      timeout: number\n    ): Promise<void>;\n    printBluetooth(\n      macAddress: string,\n      payload: string,\n      autoCut: boolean,\n      openCashbox: boolean,\n      mmFeedPaper: number,\n      printerDpi: number,\n      printerWidthMM: number,\n      printerNbrCharactersPerLine: number\n    ): Promise<void>;\n    getBluetoothDeviceList(): Promise<BluetoothPrinter[]>;\n  };\n};\n\nconst { ThermalPrinterModule }: NativeModuleType =\n  NativeModules as NativeModuleType;\n\ninterface PrinterInterface {\n  payload: string;\n  autoCut: boolean;\n  openCashbox: boolean;\n  mmFeedPaper: number;\n  printerDpi: number;\n  printerWidthMM: number;\n  printerNbrCharactersPerLine: number;\n}\n\ninterface PrintTcpInterface extends PrinterInterface {\n  ip: string;\n  port: number;\n  timeout: number;\n}\n\ninterface PrintBluetoothInterface extends PrinterInterface {\n  macAddress: string;\n}\n\nlet defaultConfig: PrintTcpInterface & PrintBluetoothInterface = {\n  macAddress: '',\n  ip: '192.168.192.168',\n  port: 9100,\n  payload: '',\n  autoCut: true,\n  openCashbox: false,\n  mmFeedPaper: 20,\n  printerDpi: 203,\n  printerWidthMM: 80,\n  printerNbrCharactersPerLine: 42,\n  timeout: 30000,\n};\n\nconst getConfig = (\n  args: Partial<typeof defaultConfig>\n): typeof defaultConfig => {\n  return Object.assign({}, defaultConfig, args);\n};\n\nconst printTcp = async (\n  args: Partial<PrintTcpInterface> & Pick<PrinterInterface, 'payload'>\n): Promise<void> => {\n  const {\n    ip,\n    port,\n    payload,\n    autoCut,\n    openCashbox,\n    mmFeedPaper,\n    printerDpi,\n    printerWidthMM,\n    printerNbrCharactersPerLine,\n    timeout,\n  } = getConfig(args);\n\n  await ThermalPrinterModule.printTcp(\n    ip,\n    port,\n    payload,\n    autoCut,\n    openCashbox,\n    mmFeedPaper,\n    printerDpi,\n    printerWidthMM,\n    printerNbrCharactersPerLine,\n    timeout\n  );\n};\n\nconst printBluetooth = (\n  args: Partial<PrintBluetoothInterface> & Pick<PrinterInterface, 'payload'>\n): Promise<void> => {\n  const {\n    macAddress,\n    payload,\n    autoCut,\n    openCashbox,\n    mmFeedPaper,\n    printerDpi,\n    printerWidthMM,\n    printerNbrCharactersPerLine,\n  } = getConfig(args);\n\n  return ThermalPrinterModule.printBluetooth(\n    macAddress,\n    payload,\n    autoCut,\n    openCashbox,\n    mmFeedPaper,\n    printerDpi,\n    printerWidthMM,\n    printerNbrCharactersPerLine\n  );\n};\n\nconst getBluetoothDeviceList = (): Promise<BluetoothPrinter[]> => {\n  return ThermalPrinterModule.getBluetoothDeviceList();\n};\n\nexport default {\n  printTcp,\n  printBluetooth,\n  defaultConfig,\n  getBluetoothDeviceList,\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAmC5C,MAAM;EAAEC;AAAuC,CAAC,GAC9CD,aAAiC;AAsBnC,IAAIE,aAA0D,GAAG;EAC/DC,UAAU,EAAE,EAAE;EACdC,EAAE,EAAE,iBAAiB;EACrBC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,IAAI;EACbC,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE,GAAG;EACfC,cAAc,EAAE,EAAE;EAClBC,2BAA2B,EAAE,EAAE;EAC/BC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GACbC,IAAmC,IACV;EACzB,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEf,aAAa,EAAEa,IAAI,CAAC;AAC/C,CAAC;AAED,MAAMG,QAAQ,GAAG,MACfH,IAAoE,IAClD;EAClB,MAAM;IACJX,EAAE;IACFC,IAAI;IACJC,OAAO;IACPC,OAAO;IACPC,WAAW;IACXC,WAAW;IACXC,UAAU;IACVC,cAAc;IACdC,2BAA2B;IAC3BC;EACF,CAAC,GAAGC,SAAS,CAACC,IAAI,CAAC;EAEnB,MAAMd,oBAAoB,CAACiB,QAAQ,CACjCd,EAAE,EACFC,IAAI,EACJC,OAAO,EACPC,OAAO,EACPC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,cAAc,EACdC,2BAA2B,EAC3BC,OAAO,CACR;AACH,CAAC;AAED,MAAMM,cAAc,GAClBJ,IAA0E,IACxD;EAClB,MAAM;IACJZ,UAAU;IACVG,OAAO;IACPC,OAAO;IACPC,WAAW;IACXC,WAAW;IACXC,UAAU;IACVC,cAAc;IACdC;EACF,CAAC,GAAGE,SAAS,CAACC,IAAI,CAAC;EAEnB,OAAOd,oBAAoB,CAACkB,cAAc,CACxChB,UAAU,EACVG,OAAO,EACPC,OAAO,EACPC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,cAAc,EACdC,2BAA2B,CAC5B;AACH,CAAC;AAED,MAAMQ,sBAAsB,GAAGA,CAAA,KAAmC;EAChE,OAAOnB,oBAAoB,CAACmB,sBAAsB,EAAE;AACtD,CAAC;AAED,eAAe;EACbF,QAAQ;EACRC,cAAc;EACdjB,aAAa;EACbkB;AACF,CAAC"}